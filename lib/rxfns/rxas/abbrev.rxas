/*
 * cREXX COMPILER VERSION : cREXX I0134
 * SOURCE                 : abbrev
 * BUILT                  : 2021-10-13 17:49:11
 */

.globals=0

abbrev() .locals=10 .expose=abbrev.abbrev
   * Line 4: string = .string
   brtpandt l4c,a1,2
   scopy r1,a1
   br l4d
l4c:
   swap r1,a1
l4d:
   * Line 4: astr = .string
   brtpandt l8c,a2,2
   scopy r2,a2
   br l8d
l8c:
   swap r2,a2
l8d:
   * Line 4: len = 0
   brtpandt l11a,a3,1
   load a3,0
l11a:
   * Line 5: slen=0
   load r3,0
   * Line 6: alen=0
   load r4,0
   * Line 7: char1=0
   load r5,0
   * Line 8: char2=0
   load r6,0
   * Line 9: strlen slen,string
   strlen r3,r1
   * Line 10: strlen alen,astr
   strlen r4,r2
   * Line 11: {DO}
   * Line 11: i=0
   load r7,0
   * Line 11: to alen-1
   isub r8,r4,1
l57:
   * Line 11: to alen-1
   igt r0,r7,r8
   brt l41,r0
   * Line 12: strchar char1,string,i
   strchar r5,r1,r7
   * Line 13: strchar char2,astr,i
   strchar r6,r2,r7
   * Line 14: {IF} char1\=char2
   ine r9,r5,r6
   brf l56,r9
   * Line 14: {THEN}
   * Line 14: return 0
   ret "0"
l56:
   * Line 11: {Implicit "BY 1"}
   inc r7
   * Line 11: {DO-END}
   br l57
l41:
   * Line 17: {IF} len>0
   igt r9,a3,0
   brf l68,r9
   * Line 18: {THEN}
   * Line 18: {IF} i<len
   ilt r8,r7,a3
   brf l66,r8
   * Line 18: {THEN}
   * Line 18: return 0
   ret "0"
l66:
l68:
   * Line 20: return 1
   ret "1"

length() .expose=length.length

substr() .expose=substr.substr
